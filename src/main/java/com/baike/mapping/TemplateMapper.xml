<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.baike.dao.TemplateMapper" >
  <resultMap id="BaseResultMap" type="com.baike.model.Template" >
    <id column="template_id" property="templateId" jdbcType="INTEGER" />
    <result column="template_name" property="templateName" jdbcType="VARCHAR" />
    <result column="create_by" property="createBy" jdbcType="INTEGER" />
    <result column="update_by" property="updateBy" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="sub_category_id" property="subCategoryId" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.baike.model.Template" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    template_id, template_name, create_by, update_by, create_time, update_time, sub_category_id
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from template
    where template_id = #{templateId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from template
    where template_id = #{templateId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.baike.model.Template" >
    insert into template (template_id, template_name, create_by,
    update_by, create_time, update_time,
    sub_category_id, content)
    values (#{templateId,jdbcType=INTEGER}, #{templateName,jdbcType=VARCHAR}, #{createBy,jdbcType=INTEGER},
    #{updateBy,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
    #{subCategoryId,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.baike.model.Template" >
    insert into template
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="templateId != null" >
        template_id,
      </if>
      <if test="templateName != null" >
        template_name,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="subCategoryId != null" >
        sub_category_id,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="templateId != null" >
        #{templateId,jdbcType=INTEGER},
      </if>
      <if test="templateName != null" >
        #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="subCategoryId != null" >
        #{subCategoryId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.baike.model.Template" >
    update template
    <set >
      <if test="templateName != null" >
        template_name = #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="subCategoryId != null" >
        sub_category_id = #{subCategoryId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where template_id = #{templateId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.baike.model.Template" >
    update template
    set template_name = #{templateName,jdbcType=VARCHAR},
    create_by = #{createBy,jdbcType=INTEGER},
    update_by = #{updateBy,jdbcType=INTEGER},
    create_time = #{createTime,jdbcType=TIMESTAMP},
    update_time = #{updateTime,jdbcType=TIMESTAMP},
    sub_category_id = #{subCategoryId,jdbcType=INTEGER},
    content = #{content,jdbcType=LONGVARCHAR}
    where template_id = #{templateId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.baike.model.Template" >
    update template
    set template_name = #{templateName,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=INTEGER},
      update_by = #{updateBy,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      sub_category_id = #{subCategoryId,jdbcType=INTEGER}
    where template_id = #{templateId,jdbcType=INTEGER}
  </update>

  <select id="selectAll" resultMap="ResultMapWithBLOBs" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from template
  </select>
</mapper>